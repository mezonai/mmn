// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: transaction_status.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Transaction status enum
type TransactionStatus int32

const (
	TransactionStatus_UNKNOWN   TransactionStatus = 0
	TransactionStatus_PENDING   TransactionStatus = 1 // Transaction is in mempool
	TransactionStatus_CONFIRMED TransactionStatus = 2 // Transaction is included in a block
	TransactionStatus_FINALIZED TransactionStatus = 3 // Transaction is finalized (block has enough votes)
	TransactionStatus_FAILED    TransactionStatus = 4 // Transaction failed validation
	TransactionStatus_EXPIRED   TransactionStatus = 5 // Transaction expired (timeout)
)

// Enum value maps for TransactionStatus.
var (
	TransactionStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "CONFIRMED",
		3: "FINALIZED",
		4: "FAILED",
		5: "EXPIRED",
	}
	TransactionStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"PENDING":   1,
		"CONFIRMED": 2,
		"FINALIZED": 3,
		"FAILED":    4,
		"EXPIRED":   5,
	}
)

func (x TransactionStatus) Enum() *TransactionStatus {
	p := new(TransactionStatus)
	*p = x
	return p
}

func (x TransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_transaction_status_proto_enumTypes[0].Descriptor()
}

func (TransactionStatus) Type() protoreflect.EnumType {
	return &file_transaction_status_proto_enumTypes[0]
}

func (x TransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionStatus.Descriptor instead.
func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_transaction_status_proto_rawDescGZIP(), []int{0}
}

// Request to get transaction status
type GetTransactionStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionStatusRequest) Reset() {
	*x = GetTransactionStatusRequest{}
	mi := &file_transaction_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionStatusRequest) ProtoMessage() {}

func (x *GetTransactionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return file_transaction_status_proto_rawDescGZIP(), []int{0}
}

func (x *GetTransactionStatusRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

// Response with transaction status
type GetTransactionStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Status        TransactionStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=mmn.TransactionStatus" json:"status,omitempty"`
	BlockSlot     uint64                 `protobuf:"varint,3,opt,name=block_slot,json=blockSlot,proto3" json:"block_slot,omitempty"`         // Slot where transaction was included (if confirmed/finalized)
	BlockHash     string                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`          // Hash of the block (if confirmed/finalized)
	Confirmations uint64                 `protobuf:"varint,5,opt,name=confirmations,proto3" json:"confirmations,omitempty"`                  // Number of confirmations
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Error message if failed
	Timestamp     uint64                 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                          // Timestamp when status was last updated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionStatusResponse) Reset() {
	*x = GetTransactionStatusResponse{}
	mi := &file_transaction_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionStatusResponse) ProtoMessage() {}

func (x *GetTransactionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionStatusResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionStatusResponse) Descriptor() ([]byte, []int) {
	return file_transaction_status_proto_rawDescGZIP(), []int{1}
}

func (x *GetTransactionStatusResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *GetTransactionStatusResponse) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UNKNOWN
}

func (x *GetTransactionStatusResponse) GetBlockSlot() uint64 {
	if x != nil {
		return x.BlockSlot
	}
	return 0
}

func (x *GetTransactionStatusResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *GetTransactionStatusResponse) GetConfirmations() uint64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *GetTransactionStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetTransactionStatusResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Request to subscribe to transaction status updates
type SubscribeTransactionStatusRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TxHash         string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TimeoutSeconds uint32                 `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"` // How long to wait for status changes
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubscribeTransactionStatusRequest) Reset() {
	*x = SubscribeTransactionStatusRequest{}
	mi := &file_transaction_status_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransactionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransactionStatusRequest) ProtoMessage() {}

func (x *SubscribeTransactionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_status_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransactionStatusRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return file_transaction_status_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeTransactionStatusRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *SubscribeTransactionStatusRequest) GetTimeoutSeconds() uint32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// Stream of transaction status updates
type TransactionStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Status        TransactionStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=mmn.TransactionStatus" json:"status,omitempty"`
	BlockSlot     uint64                 `protobuf:"varint,3,opt,name=block_slot,json=blockSlot,proto3" json:"block_slot,omitempty"`
	BlockHash     string                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Confirmations uint64                 `protobuf:"varint,5,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionStatusUpdate) Reset() {
	*x = TransactionStatusUpdate{}
	mi := &file_transaction_status_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionStatusUpdate) ProtoMessage() {}

func (x *TransactionStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_status_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionStatusUpdate.ProtoReflect.Descriptor instead.
func (*TransactionStatusUpdate) Descriptor() ([]byte, []int) {
	return file_transaction_status_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionStatusUpdate) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *TransactionStatusUpdate) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UNKNOWN
}

func (x *TransactionStatusUpdate) GetBlockSlot() uint64 {
	if x != nil {
		return x.BlockSlot
	}
	return 0
}

func (x *TransactionStatusUpdate) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *TransactionStatusUpdate) GetConfirmations() uint64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *TransactionStatusUpdate) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TransactionStatusUpdate) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Request to track multiple transactions
type TrackTransactionsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TxHashes       []string               `protobuf:"bytes,1,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty"`
	TimeoutSeconds uint32                 `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TrackTransactionsRequest) Reset() {
	*x = TrackTransactionsRequest{}
	mi := &file_transaction_status_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackTransactionsRequest) ProtoMessage() {}

func (x *TrackTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_status_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackTransactionsRequest.ProtoReflect.Descriptor instead.
func (*TrackTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_transaction_status_proto_rawDescGZIP(), []int{4}
}

func (x *TrackTransactionsRequest) GetTxHashes() []string {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

func (x *TrackTransactionsRequest) GetTimeoutSeconds() uint32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// Response for tracking multiple transactions
type TrackTransactionsResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Updates       []*TransactionStatusUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackTransactionsResponse) Reset() {
	*x = TrackTransactionsResponse{}
	mi := &file_transaction_status_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackTransactionsResponse) ProtoMessage() {}

func (x *TrackTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_status_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackTransactionsResponse.ProtoReflect.Descriptor instead.
func (*TrackTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_transaction_status_proto_rawDescGZIP(), []int{5}
}

func (x *TrackTransactionsResponse) GetUpdates() []*TransactionStatusUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

var File_transaction_status_proto protoreflect.FileDescriptor

const file_transaction_status_proto_rawDesc = "" +
	"\n" +
	"\x18transaction_status.proto\x12\x03mmn\"6\n" +
	"\x1bGetTransactionStatusRequest\x12\x17\n" +
	"\atx_hash\x18\x01 \x01(\tR\x06txHash\"\x8e\x02\n" +
	"\x1cGetTransactionStatusResponse\x12\x17\n" +
	"\atx_hash\x18\x01 \x01(\tR\x06txHash\x12.\n" +
	"\x06status\x18\x02 \x01(\x0e2\x16.mmn.TransactionStatusR\x06status\x12\x1d\n" +
	"\n" +
	"block_slot\x18\x03 \x01(\x04R\tblockSlot\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\tR\tblockHash\x12$\n" +
	"\rconfirmations\x18\x05 \x01(\x04R\rconfirmations\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x04R\ttimestamp\"e\n" +
	"!SubscribeTransactionStatusRequest\x12\x17\n" +
	"\atx_hash\x18\x01 \x01(\tR\x06txHash\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\rR\x0etimeoutSeconds\"\x89\x02\n" +
	"\x17TransactionStatusUpdate\x12\x17\n" +
	"\atx_hash\x18\x01 \x01(\tR\x06txHash\x12.\n" +
	"\x06status\x18\x02 \x01(\x0e2\x16.mmn.TransactionStatusR\x06status\x12\x1d\n" +
	"\n" +
	"block_slot\x18\x03 \x01(\x04R\tblockSlot\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\tR\tblockHash\x12$\n" +
	"\rconfirmations\x18\x05 \x01(\x04R\rconfirmations\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x04R\ttimestamp\"`\n" +
	"\x18TrackTransactionsRequest\x12\x1b\n" +
	"\ttx_hashes\x18\x01 \x03(\tR\btxHashes\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\rR\x0etimeoutSeconds\"S\n" +
	"\x19TrackTransactionsResponse\x126\n" +
	"\aupdates\x18\x01 \x03(\v2\x1c.mmn.TransactionStatusUpdateR\aupdates*d\n" +
	"\x11TransactionStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\r\n" +
	"\tCONFIRMED\x10\x02\x12\r\n" +
	"\tFINALIZED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04\x12\v\n" +
	"\aEXPIRED\x10\x052\xb1\x02\n" +
	"\x18TransactionStatusService\x12[\n" +
	"\x14GetTransactionStatus\x12 .mmn.GetTransactionStatusRequest\x1a!.mmn.GetTransactionStatusResponse\x12d\n" +
	"\x1aSubscribeTransactionStatus\x12&.mmn.SubscribeTransactionStatusRequest\x1a\x1c.mmn.TransactionStatusUpdate0\x01\x12R\n" +
	"\x11TrackTransactions\x12\x1d.mmn.TrackTransactionsRequest\x1a\x1e.mmn.TrackTransactionsResponseB\x11Z\x0fmmn/proto;protob\x06proto3"

var (
	file_transaction_status_proto_rawDescOnce sync.Once
	file_transaction_status_proto_rawDescData []byte
)

func file_transaction_status_proto_rawDescGZIP() []byte {
	file_transaction_status_proto_rawDescOnce.Do(func() {
		file_transaction_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transaction_status_proto_rawDesc), len(file_transaction_status_proto_rawDesc)))
	})
	return file_transaction_status_proto_rawDescData
}

var file_transaction_status_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transaction_status_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_transaction_status_proto_goTypes = []any{
	(TransactionStatus)(0),                    // 0: mmn.TransactionStatus
	(*GetTransactionStatusRequest)(nil),       // 1: mmn.GetTransactionStatusRequest
	(*GetTransactionStatusResponse)(nil),      // 2: mmn.GetTransactionStatusResponse
	(*SubscribeTransactionStatusRequest)(nil), // 3: mmn.SubscribeTransactionStatusRequest
	(*TransactionStatusUpdate)(nil),           // 4: mmn.TransactionStatusUpdate
	(*TrackTransactionsRequest)(nil),          // 5: mmn.TrackTransactionsRequest
	(*TrackTransactionsResponse)(nil),         // 6: mmn.TrackTransactionsResponse
}
var file_transaction_status_proto_depIdxs = []int32{
	0, // 0: mmn.GetTransactionStatusResponse.status:type_name -> mmn.TransactionStatus
	0, // 1: mmn.TransactionStatusUpdate.status:type_name -> mmn.TransactionStatus
	4, // 2: mmn.TrackTransactionsResponse.updates:type_name -> mmn.TransactionStatusUpdate
	1, // 3: mmn.TransactionStatusService.GetTransactionStatus:input_type -> mmn.GetTransactionStatusRequest
	3, // 4: mmn.TransactionStatusService.SubscribeTransactionStatus:input_type -> mmn.SubscribeTransactionStatusRequest
	5, // 5: mmn.TransactionStatusService.TrackTransactions:input_type -> mmn.TrackTransactionsRequest
	2, // 6: mmn.TransactionStatusService.GetTransactionStatus:output_type -> mmn.GetTransactionStatusResponse
	4, // 7: mmn.TransactionStatusService.SubscribeTransactionStatus:output_type -> mmn.TransactionStatusUpdate
	6, // 8: mmn.TransactionStatusService.TrackTransactions:output_type -> mmn.TrackTransactionsResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_transaction_status_proto_init() }
func file_transaction_status_proto_init() {
	if File_transaction_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transaction_status_proto_rawDesc), len(file_transaction_status_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transaction_status_proto_goTypes,
		DependencyIndexes: file_transaction_status_proto_depIdxs,
		EnumInfos:         file_transaction_status_proto_enumTypes,
		MessageInfos:      file_transaction_status_proto_msgTypes,
	}.Build()
	File_transaction_status_proto = out.File
	file_transaction_status_proto_goTypes = nil
	file_transaction_status_proto_depIdxs = nil
}
