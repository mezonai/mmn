name: mmn

services:
  # ==================== BOOTSTRAP NODE ====================
  # Bootstrap node that help new node to join blockchain network
  bootnode:
    build:
      context: .
      args:
        DB_VENDOR: ${DB_VENDOR:-rocksdb} #rocksdb or leveldb
    image: mmn-node:${DB_VENDOR:-rocksdb}
    command: ["./mmn", "bootnode", "--bootstrap-p2p-port", "9000", "--privkey-path", "./config/bootnode_privkey.txt"]
    ports:
      - "9000:9000"
    volumes:
      - logs_data:/app/logs
    environment:
      - LOGFILE=mmn-bootnode.log
      - LOGFILE_MAX_SIZE_MB=${LOGFILE_MAX_SIZE_MB:-500}
      - LOGFILE_MAX_AGE_DAYS=${LOGFILE_MAX_AGE_DAYS:-7}
    networks:
      - mezon
    restart: unless-stopped
    profiles:
      - dev
      - bootstrap

  # ==================== CORE BLOCKCHAIN NODE ====================
  # End users (nodes) will always run this
  node:
    image: mmn-node:${DB_VENDOR:-rocksdb}
    command: >
      sh -c '
        ./mmn init --data-dir "./node-data/node1" --genesis "config/genesis.yml" --database "${DB_VENDOR:-rocksdb}" --privkey-path "config/key1.txt" &&
        ./mmn node --database ${DB_VENDOR:-rocksdb} --data-dir "./node-data/node1" --jsonrpc-addr ":${NODE_API_PORT}" --grpc-addr ":${NODE_GRPC_PORT}" --bootstrap-addresses "${BOOTSTRAP_NODE_ADDR}"
      '
    ports:
      - ${NODE_API_PORT}:${NODE_API_PORT}
      - ${NODE_GRPC_PORT}:${NODE_GRPC_PORT}
    volumes:
      - node_data:/app/node-data
      - logs_data:/app/logs
    environment:
      - NODE_NAME=${NODE_NAME}
      - LOGFILE_MAX_SIZE_MB=${LOGFILE_MAX_SIZE_MB:-500}
      - LOGFILE_MAX_AGE_DAYS=${LOGFILE_MAX_AGE_DAYS:-7}
      - CORS_ALLOWED_ORIGINS=*
      - CORS_ALLOWED_METHODS=POST,OPTIONS
      - CORS_ALLOWED_HEADERS=Content-Type
    networks:
      - mezon
    restart: unless-stopped
    profiles:
      - dev
      - node
      - monitored-node

  # ==================== MONITORING SERVICES ====================
  # Services that help monitor blockchain and individual nodes
  grafana:
    image: grafana/grafana:11.6.5
    environment:
      - GF_PLUGINS_PREINSTALL=grafana-lokiexplore-app
    ports:
      - "3300:3000"
    volumes:
      - ./monitoring/config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/config/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana_data:/var/lib/grafana
    networks:
      - mezon
    restart: unless-stopped
    profiles:
      - dev
      - monitoring-center

  loki:
    image: grafana/loki:3.5.0
    command: ["-config.file=/etc/loki/config.yml"]
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/config/loki-config.yml:/etc/loki/config.yml:ro
      - loki_data:/loki
    networks:
      - mezon
    restart: unless-stopped
    profiles:
      - dev
      - monitoring-center

  prometheus:
    image: prom/prometheus:v3.5.0
    command: [ "--config.file=/etc/prometheus/prometheus.yml" ]
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/config/prometheus-config.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/config/prometheus/targets:/etc/prometheus/targets:ro
      - prom_data:/prometheus
    networks:
      - mezon
    restart: unless-stopped
    profiles:
      - dev
      - monitoring-center

  promtail:
    image: grafana/promtail:3.5.0
    command:
      - "-config.file=/etc/promtail/config.yml"
      - "-config.expand-env=true"
    volumes:
      - ./monitoring/config/promtail-config.yml:/etc/promtail/config.yml:ro
      - logs_data:/var/log/mmn:ro
    environment:
      - LOKI_ADDR=${LOKI_ADDR}
    networks:
      - mezon
    restart: unless-stopped
    profiles:
      - dev
      - monitored-node

  node-exporter:
    image: prom/node-exporter:v1.9.1
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - mezon
    restart: unless-stopped
    profiles:
      - dev
      - monitored-node

networks:
  mezon:

volumes:
  node_data:
  logs_data:
  loki_data:
  grafana_data:
  prom_data: